{"version":3,"sources":["components/GeneralSection.js","components/AcademicSection.js","components/ProfessionalSection.js","App.js","reportWebVitals.js","index.js"],"names":["GeneralSection","_useState","useState","name","email","phone","editMode","_useState2","Object","slicedToArray","general","setGeneral","_useState3","_useState4","prevGeneral","setPrevGeneral","react_default","a","createElement","className","GeneralEdit","onChangeEdit","e","statePropName","target","attributes","value","newPropValue","objectSpread","defineProperty","onClickCancel","onClickSubmit","GeneralDisplay","onClickEdit","console","log","_ref","onClick","_ref2","defaultValue","onChange","AcademicSection","itemList","setItemList","school","title","year","uid","uniqid","itemEdited","setItemEdited","methods","itemUid","itemIndex","findIndex","itemi","updatedItemList","map","itemPropName","itemListWithAllEditModeToFalse","onClickDelete","filter","emptyItem","itemListUpdated","concat","Item","data","key","ItemEdit","ItemDisplay","_ref3","ProfessionalSection","company","role","dateFrom","dateTo","item","ProfessionalSection_Item","ProfessionalSection_ItemEdit","ProfessionalSection_ItemDisplay","App","GeneralSection_GeneralSection","AcademicSection_AcademicSection","ProfessionalSection_ProfessionalSection","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.89b7fd6a.chunk.js","sourcesContent":["import '../styles/GeneralSection.css';\nimport React, { useState } from 'react';\n\nexport default function GeneralSection () {\n\n  // ##########################################\n  // HOOKS\n  // ##########################################\n\n  const [general, setGeneral] = useState({\n          name: \"\",\n          email: \"\",\n          phone: \"\",\n          editMode: false,\n        });\n\n  // a copy of the \"general\" state to use in onClickCancel        \n  const [prevGeneral, setPrevGeneral] = useState(general);\n\n  // ##########################################\n  // FUNCTIONS (TO UPDATE THE STATE)\n  // ##########################################\n\n  // ------------------------------------------\n  const onClickEdit = (e) => {\n    console.log(\"clicked ediiit\")\n\n    setGeneral(\n      {\n        ...general,\n        editMode: !general.editMode\n        }\n    )\n\n    // make a copy of the state if needed for onClickCancel\n    setPrevGeneral(general)\n  }\n\n  // ------------------------------------------  \n  const onChangeEdit = (e) => {\n    // name (in the state) of the property changed:\n    const statePropName = e.target.attributes.name.value;\n    \n    // new value for the property changed:\n    const newPropValue = e.target.value;\n\n    // update the property in the state,\n    // (... is spreading the existing state.general in the \n    // new state.general, except the changed property)\n    setGeneral(\n      {\n        ...general,\n        [statePropName]: newPropValue\n      }\n    );\n  }\n\n  // ------------------------------------------  \n  const onClickSubmit = (e) => {\n    setGeneral(\n      {\n        ...general,\n        editMode: !general.editMode\n        }\n    )\n  }\n\n  // ------------------------------------------  \n  const onClickCancel = (e) => {\n    // set the state back to prevGeneral\n    setGeneral(prevGeneral);\n  }\n\n\n  // ##########################################\n  // THE RENDER FUNCTION\n  // ##########################################\n  const { name, email, phone, editMode } = general;\n    return (\n      <div className=\"div-general\">\n\n        <div>\n            { editMode \n                ?   <GeneralEdit \n                        name={name} \n                        email={email} \n                        phone={phone} \n                        onChangeEdit={onChangeEdit} \n                        onClickCancel={onClickCancel}\n                        onClickSubmit={onClickSubmit}>\n                    </GeneralEdit>\n\n                :   <GeneralDisplay \n                        name={name} \n                        email={email} \n                        phone={phone} \n                        onClickEdit={onClickEdit}>\n                    </GeneralDisplay>\n            }\n        </div>\n\n      </div>\n    )\n}\n\n\nfunction GeneralDisplay ({name, email, phone, onClickEdit}){\n    return (\n      <div className=\"div-general-display\">\n\n            <div className=\"header-display\">\n                <div className=\"title\">General</div>\n                <button className=\"btn-edit\" onClick={onClickEdit}>edit</button>\n            </div>\n\n            <div className=\"row\">\n                <div className=\"label\">Name :</div>\n                <div className=\"value\">{name}</div>\n            </div>\n            <div className=\"row\">\n                <div className=\"label\">Email :</div>\n                <div className=\"value\">{email}</div>\n            </div>\n            <div className=\"row\">\n                <div className=\"label\">Phone :</div>\n                <div className=\"value\">{phone}</div>\n            </div>\n\n      </div>\n    )\n}\n\n\nfunction GeneralEdit ({name, email, phone, onChangeEdit, onClickSubmit, onClickCancel }) {\n    return (\n      <div className=\"div-general-edit\">\n\n          <div className=\"header-edit\">\n              <div className=\"title\">General</div>\n              <button className=\"btn-cancel\" onClick={onClickCancel}>cancel</button>\n              <button className=\"btn-submit\" onClick={onClickSubmit}>submit</button>\n          </div>\n\n          <div className=\"row\">\n              <div className=\"label\">Name :</div>\n              <input className=\"value\" defaultValue={name} name=\"name\" onChange={onChangeEdit}/>\n          </div>\n          <div className=\"row\">\n              <div className=\"label\">Email :</div>\n              <input className=\"value\" defaultValue={email} name=\"email\" onChange={onChangeEdit}/>\n          </div>\n          <div className=\"row\">\n              <div className=\"label\">Phone :</div>\n              <input className=\"value\" defaultValue={phone} name=\"phone\" onChange={onChangeEdit}/>\n          </div>\n\n      </div>\n    )\n}\n\n","import '../styles/AcademicSection.css';\nimport uniqid from 'uniqid';\nimport React, { useState } from 'react';\n\n\nexport default function AcademicSection() {\n\n  // ##########################################\n  // HOOKS\n  // ##########################################\n  // description of hooks:\n  // -- itemList: array containing all the items\n  // all operations are done on the itemList \n  // state (except during edit)\n  // -- itemEdited: state for the item being\n  // edited (if any). This is added to itemList\n  // (on submit) or not added (if cancel)\n\n  const [itemList, setItemList] = useState(\n    []\n  );\n\n  const [itemEdited, setItemEdited] = useState(\n    {\n      school: \"\",\n      title: \"\",\n      year: \"\",\n      editMode: false,\n      uid: uniqid()\n    }\n  );\n\n\n  // ##########################################\n  // FUNCTIONS - TO UPDATE THE STATES\n  // ##########################################\n\n  // ------------------------------------------  \n  const onClickAdd = (e) => { \n    // turn all items to non-edited mode (only one item should be \n    // edited at a time)\n    const itemListWithAllEditModeToFalse = itemList.map( itemi =>\n      { return ({ ...itemi, editMode: false}) } \n    );\n\n    // adds an item block with empty fields (in edit mode):\n    const emptyItem = {\n      school: \"\", \n      title: \"\", \n      year: \"\", \n      editMode: false, \n      uid: uniqid()\n    };\n\n    // add the new empty item and update the itemList:\n    const itemListUpdated = itemListWithAllEditModeToFalse.concat(emptyItem);\n    setItemList( itemListUpdated );\n  };\n\n  // ------------------------------------------  \n  const onClickEdit = (e) => {\n    // id of the item selected:\n    const itemUid = e.target.attributes.uid.value;\n    // index of this item in itemList:\n    let itemIndex = itemList.findIndex(itemi => {\n      return itemi.uid === itemUid;\n    });\n\n    // update the itemEdited state:\n    setItemEdited(itemList[itemIndex]);\n\n    // switch all the editMode to false, except the item with itemUid\n    const updatedItemList = itemList.map( (itemi) => \n        (itemi.uid === itemUid) ? \n            {\n              ...itemi,\n              editMode: true\n            } \n        : \n            {\n              ...itemi,\n              editMode: false\n            } \n    )\n    // update itemList\n    setItemList( updatedItemList );\n  }\n\n  // ------------------------------------------  \n  const onChangeEdit = (e) => {\n    // name of the property changed:\n    const itemPropName = e.target.attributes.name.value;\n    // new value for the property changed:\n    const newPropValue = e.target.value;\n    // update the itemEdited state:\n    setItemEdited(\n      {\n        ...itemEdited,\n        [itemPropName]: newPropValue\n      }\n    )\n  }\n\n  // ------------------------------------------  \n  const onClickSubmit = (e) => {\n    // id of the item selected:\n    const itemUid = e.target.attributes.uid.value;\n    // update itemList with the edited item:\n    const updatedItemList = itemList.map( (itemi) => \n        (itemi.uid === itemUid) ? \n            itemEdited \n        : \n            {\n              ...itemi\n            } \n    )\n    // update itemList:\n    setItemList( updatedItemList );\n  }\n\n  // ------------------------------------------  \n  const onClickCancel = (e) => {\n    // turn all items to non-edited mode (only one item should be \n    // edited at a time):\n    const itemListWithAllEditModeToFalse = itemList.map( itemi =>\n      { return ({ ...itemi, editMode: false}) } \n    );\n    // update itemList:\n    setItemList( itemListWithAllEditModeToFalse );\n  }\n\n  // ------------------------------------------  \n  const onClickDelete = (e) => {\n    // id of the item selected:\n    const itemUid = e.target.attributes.uid.value;\n    // delete that item:\n    setItemList(\n      itemList.filter(itemi => itemi.uid !== itemUid)\n    )\n  }  \n\n\n  // ##########################################\n  // RENDERING\n  // ##########################################\n  const methods = {\n      onClickEdit: onClickEdit, \n      onChangeEdit: onChangeEdit, \n      onClickSubmit: onClickSubmit, \n      onClickCancel: onClickCancel,\n      onClickDelete: onClickDelete\n  };\n\n  return (\n      <div className=\"div-academic\">\n\n          <div className=\"header-academic\">\n                <div className=\"title\">Academic Background</div>\n                <button className=\"btn-add\" onClick={onClickAdd}>add</button>\n          </div>\n\n          { itemList.map( (itemi) => { \n            return (\n              <Item data={itemi} key={itemi.uid} methods={methods}></Item>\n            )\n\n          })}\n\n      </div>\n  )\n}\n\n\nexport function Item ({ data, methods }) {\n    // destructure:\n    const { school, title, year, editMode, uid } = data;\n    const { onClickEdit, onChangeEdit, onClickSubmit, onClickCancel, onClickDelete } = methods;\n\n    return (\n      <div className=\"div-item\">\n        <div>\n            { editMode \n                ?   <ItemEdit \n                        school={school} \n                        title={title} \n                        year={year}\n                        uid={uid}\n                        onChangeEdit={onChangeEdit} \n                        onClickCancel={onClickCancel}\n                        onClickSubmit={onClickSubmit}>\n                    </ItemEdit>\n\n                :   <ItemDisplay \n                        school={school} \n                        title={title} \n                        year={year} \n                        uid={uid}\n                        onClickEdit={onClickEdit}\n                        onClickDelete={onClickDelete}>\n                    </ItemDisplay>\n            }\n        </div>\n      </div>\n    )\n}\n\n\nexport function ItemDisplay({ school, title, year, uid, onClickEdit, onClickDelete }) {\n    return (\n      <div className=\"div-item-display\">\n\n            <div className=\"header-display\">\n                <button className=\"btn-edit\" uid={uid} onClick={onClickEdit}>edit</button>\n                <button className=\"btn-edit\" uid={uid} onClick={onClickDelete}>delete</button>\n            </div>\n\n            <div className=\"row\">\n                <div className=\"label\">School :</div>\n                <div className=\"value\">{school}</div>\n            </div>\n            <div className=\"row\">\n                <div className=\"label\">Title :</div>\n                <div className=\"value\">{title}</div>\n            </div>\n            <div className=\"row\">\n                <div className=\"label\">Year :</div>\n                <div className=\"value\">{year}</div>\n            </div>\n\n      </div>\n    )\n}\n\n\nexport function ItemEdit ({ school, title, year, uid, onChangeEdit, onClickSubmit, onClickCancel }) {\n    return (\n      <div className=\"div-item-edit\">\n\n          <div className=\"header-edit\">\n              <button className=\"btn-submit\" uid={uid} onClick={onClickSubmit}>submit</button>            \n              <button className=\"btn-cancel\" uid={uid} onClick={onClickCancel}>cancel</button>\n          </div>\n\n          <div className=\"row\">\n              <div className=\"label\">School :</div>\n              <input className=\"value\" uid={uid} defaultValue={school} name=\"school\" onChange={onChangeEdit}/>\n          </div>\n          <div className=\"row\">\n              <div className=\"label\">Title :</div>\n              <input className=\"value\" uid={uid} defaultValue={title} name=\"title\" onChange={onChangeEdit}/>\n          </div>\n          <div className=\"row\">\n              <div className=\"label\">Year :</div>\n              <input className=\"value\" uid={uid} defaultValue={year} name=\"year\" onChange={onChangeEdit}/>\n          </div>\n\n      </div>\n    )\n}","import '../styles/ProfessionalSection.css';\nimport uniqid from 'uniqid';\nimport React, { useState } from 'react';\n\n\nexport default function ProfessionalSection() {\n  \n  // ##########################################\n  // HOOKS\n  // ##########################################\n  // description of hooks:\n  // -- itemList: array containing all the items\n  // all operations are done on the itemList \n  // state (except during edit)\n  // -- itemEdited: state for the item being\n  // edited (if any). This is added to itemList\n  // (on submit) or not added (if cancel)\n\n  const [itemList, setItemList] = useState(\n    []\n  );\n\n  const [itemEdited, setItemEdited] = useState(\n    {\n      company: \"\",\n      title: \"\",\n      role: \"\",\n      dateFrom: \"\",\n      dateTo: \"\",\n      editMode: false,\n      uid: uniqid()\n    }\n  );\n\n\n  // ##########################################\n  // FUNCTIONS - TO UPDATE THE STATES\n  // ##########################################\n\n  // ------------------------------------------  \n  const onClickAdd = (e) => { \n    // turn all items to non-edited mode (only one item should be \n    // edited at a time)\n    const itemListWithAllEditModeToFalse = itemList.map( itemi =>\n      { return ({ ...itemi, editMode: false}) } \n    );\n\n    // adds an item block with empty fields (in edit mode):\n    const emptyItem = {\n      company: \"\",\n      title: \"\",\n      role: \"\",\n      dateFrom: \"\",\n      dateTo: \"\",\n      editMode: false,\n      uid: uniqid()\n    };\n\n    // add the new empty item and update the itemList:\n    const itemListUpdated = itemListWithAllEditModeToFalse.concat(emptyItem);\n    setItemList( itemListUpdated );\n  };\n\n  // ------------------------------------------  \n  const onClickEdit = (e) => {\n    // id of the item selected:\n    const itemUid = e.target.attributes.uid.value;\n    // index of this item in itemList:\n    let itemIndex = itemList.findIndex(itemi => {\n      return itemi.uid === itemUid;\n    });\n\n    // update the itemEdited state:\n    setItemEdited(itemList[itemIndex]);\n\n    // switch all the editMode to false, except the item with itemUid\n    const updatedItemList = itemList.map( (itemi) => \n        (itemi.uid === itemUid) ? \n            {\n              ...itemi,\n              editMode: true\n            } \n        : \n            {\n              ...itemi,\n              editMode: false\n            } \n    )\n    // update itemList\n    setItemList( updatedItemList );\n  }\n\n  // ------------------------------------------  \n  const onChangeEdit = (e) => {\n    // name of the property changed:\n    const itemPropName = e.target.attributes.name.value;\n    // new value for the property changed:\n    const newPropValue = e.target.value;\n    // update the itemEdited state:\n    setItemEdited(\n      {\n        ...itemEdited,\n        [itemPropName]: newPropValue\n      }\n    )\n  }\n\n  // ------------------------------------------  \n  const onClickSubmit = (e) => {\n    // id of the item selected:\n    const itemUid = e.target.attributes.uid.value;\n    // update itemList with the edited item:\n    const updatedItemList = itemList.map( (itemi) => \n        (itemi.uid === itemUid) ? \n            itemEdited \n        : \n            {\n              ...itemi\n            } \n    )\n    // update itemList:\n    setItemList( updatedItemList );\n  }\n\n  // ------------------------------------------  \n  const onClickCancel = (e) => {\n    // turn all items to non-edited mode (only one item should be \n    // edited at a time):\n    const itemListWithAllEditModeToFalse = itemList.map( itemi =>\n      { return ({ ...itemi, editMode: false}) } \n    );\n    // update itemList:\n    setItemList( itemListWithAllEditModeToFalse );\n  }\n\n  // ------------------------------------------  \n  const onClickDelete = (e) => {\n    // id of the item selected:\n    const itemUid = e.target.attributes.uid.value;\n    // delete that item:\n    setItemList(\n      itemList.filter(itemi => itemi.uid !== itemUid)\n    )\n  }  \n\n\n  // ##########################################\n  // RENDERING\n  // ##########################################\n  const methods = {\n      onClickEdit: onClickEdit, \n      onChangeEdit: onChangeEdit, \n      onClickSubmit: onClickSubmit, \n      onClickCancel: onClickCancel,\n      onClickDelete: onClickDelete\n  };\n\n  return (\n      <div className=\"div-professional\">\n\n        <div className=\"header-professional\">\n              <div className=\"title\">Professional Experience</div>\n              <button className=\"btn-add\" onClick={onClickAdd}>add</button>\n        </div>\n\n\n        { itemList.map( (item) => { \n\n          return (\n            <Item data={item} key={item.uid} methods={methods}></Item>\n          )\n\n        })}\n\n      </div>\n  )\n}\n\n\nexport function Item ({ data, methods }) {\n    // destructure:\n    const { company, title, role, dateFrom, dateTo, editMode, uid } = data;\n    const { onClickEdit, onChangeEdit, onClickSubmit, onClickCancel, onClickDelete } = methods;\n\n    return (\n      <div className=\"div-item\">\n        <div>\n            { editMode \n                  ?   <ItemEdit \n                          company={company} \n                          title={title} \n                          role={role}\n                          dateFrom={dateFrom}\n                          dateTo={dateTo}\n                          uid={uid}\n                          onChangeEdit={onChangeEdit} \n                          onClickCancel={onClickCancel}\n                          onClickSubmit={onClickSubmit}>\n                      </ItemEdit>\n\n                  :   <ItemDisplay \n                          company={company} \n                          title={title}\n                          role={role}\n                          dateFrom={dateFrom}\n                          dateTo={dateTo} \n                          uid={uid}\n                          onClickEdit={onClickEdit}\n                          onClickDelete={onClickDelete}>\n                      </ItemDisplay>\n            }\n        </div>\n      </div>\n    )\n}\n\n\nexport function ItemDisplay({ company, title, role, dateFrom, dateTo, uid, onClickEdit, onClickDelete }) {\n    return (\n      <div className=\"div-item-display\">\n\n            <div className=\"header-display\">\n                <button className=\"btn-edit\" uid={uid} onClick={onClickEdit}>edit</button>\n                <button className=\"btn-edit\" uid={uid} onClick={onClickDelete}>delete</button>\n            </div>\n\n            <div className=\"row\">\n                <div className=\"label\">Company :</div>\n                <div className=\"value\">{company}</div>\n            </div>\n            <div className=\"row\">\n                <div className=\"label\">Title :</div>\n                <div className=\"value\">{title}</div>\n            </div>\n            <div className=\"row\">\n                <div className=\"label\">Role :</div>\n                <div className=\"value\">{role}</div>\n            </div>\n            <div className=\"row\">\n                <div className=\"label\">From :</div>\n                <div className=\"value\">{dateFrom}</div>\n            </div>\n            <div className=\"row\">\n                <div className=\"label\">To :</div>\n                <div className=\"value\">{dateTo}</div>\n            </div>\n\n      </div>\n    )\n}\n\n\nexport function ItemEdit ({ company, title, role, dateFrom, dateTo, uid, onChangeEdit, onClickSubmit, onClickCancel }) {\n    return (\n      <div className=\"div-item-edit\">\n\n            <div className=\"header-edit\">\n                <button className=\"btn-submit\" uid={uid} onClick={onClickSubmit}>submit</button>            \n                <button className=\"btn-cancel\" uid={uid} onClick={onClickCancel}>cancel</button>\n            </div>\n\n            <div className=\"row\">\n                <div className=\"label\">Company :</div>\n                <input className=\"value\" uid={uid} defaultValue={company} name=\"company\" onChange={onChangeEdit}/>\n            </div>\n            <div className=\"row\">\n                <div className=\"label\">Title :</div>\n                <input className=\"value\" uid={uid} defaultValue={title} name=\"title\" onChange={onChangeEdit}/>\n            </div>\n            <div className=\"row\">\n                <div className=\"label\">Role :</div>\n                <input className=\"value\" uid={uid} defaultValue={role} name=\"role\" onChange={onChangeEdit}/>\n            </div>\n            <div className=\"row\">\n                <div className=\"label\">From :</div>\n                <input className=\"value\" uid={uid} defaultValue={dateFrom} name=\"dateFrom\" onChange={onChangeEdit}/>\n            </div>\n            <div className=\"row\">\n                <div className=\"label\">To :</div>\n                <input className=\"value\" uid={uid} defaultValue={dateTo} name=\"dateTo\" onChange={onChangeEdit}/>\n            </div>\n\n      </div>\n    )\n}","import './styles/App.css';\nimport GeneralSection from './components/GeneralSection';\nimport AcademicSection from './components/AcademicSection';\nimport ProfessionalSection from './components/ProfessionalSection';\n\n\n\nimport React from 'react';\n\nfunction App() {\n\n  return (\n    <div className=\"div-cont\">\n\n      <h1 className=\"cv-title\">New Flash CiVi  <i>**with Hooks**</i></h1>\n\n      <GeneralSection></GeneralSection>\n\n      <AcademicSection></AcademicSection>\n\n      <ProfessionalSection></ProfessionalSection>\n\n    </div>\n  );\n\n}\n\nexport default App;\n\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}